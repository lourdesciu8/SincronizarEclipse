# Form implementation generated from reading ui file 'VentanaAlumno.ui'
#
# Created by: PyQt6 UI code generator 6.8.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets
from PyQt6.QtWidgets import QMessageBox  # Asegúrate de importar QMessageBox

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(539, 343)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        # Botones
        self.ModNotasBtn = QtWidgets.QPushButton(parent=self.centralwidget)
        self.ModNotasBtn.setGeometry(QtCore.QRect(120, 240, 141, 51))
        self.ModNotasBtn.setStyleSheet("font: 600 12pt \"Segoe UI\";\n"
                                       "background-color: rgb(255, 170, 127);")
        self.ModNotasBtn.setObjectName("ModNotasBtn")

        self.VerAsigBtn = QtWidgets.QPushButton(parent=self.centralwidget)
        self.VerAsigBtn.setGeometry(QtCore.QRect(320, 240, 141, 51))
        self.VerAsigBtn.setStyleSheet("font: 600 12pt \"Segoe UI\";\n"
                                      "background-color: rgb(255, 170, 127);")
        self.VerAsigBtn.setObjectName("VerAsigBtn")

        # Etiquetas
        self.Alumnoslabel = QtWidgets.QLabel(parent=self.centralwidget)
        self.Alumnoslabel.setGeometry(QtCore.QRect(160, 40, 71, 20))
        self.Alumnoslabel.setObjectName("Alumnoslabel")

        self.Asignaturalabel = QtWidgets.QLabel(parent=self.centralwidget)
        self.Asignaturalabel.setGeometry(QtCore.QRect(340, 40, 101, 20))
        self.Asignaturalabel.setObjectName("Asignaturalabel")

        # Listas de alumnos y asignaturas
        self.Alumnoslist = QtWidgets.QListWidget(parent=self.centralwidget)
        self.Alumnoslist.setGeometry(QtCore.QRect(120, 70, 141, 151))
        self.Alumnoslist.setObjectName("Alumnoslist")

        self.Asignaturaslist = QtWidgets.QListWidget(parent=self.centralwidget)
        self.Asignaturaslist.setGeometry(QtCore.QRect(320, 70, 141, 151))
        self.Asignaturaslist.setObjectName("Asignaturaslist")

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 539, 33))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # Agregar elementos a las listas
        self.agregar_elementos()

        # Conectar los botones a sus respectivas funciones
        self.ModNotasBtn.clicked.connect(self.modificar_notas)
        self.VerAsigBtn.clicked.connect(self.ver_asignaturas)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.ModNotasBtn.setText(_translate("MainWindow", "Modificar Notas"))
        self.VerAsigBtn.setText(_translate("MainWindow", "Ver Asignaturas"))
        self.Alumnoslabel.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:700; font-style:italic;\">Alumnos:</span></p></body></html>"))
        self.Asignaturalabel.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:12pt; font-weight:700; font-style:italic;\">Asignaturas:</span></p></body></html>"))

    def agregar_elementos(self):
        # Agregar alumnos a la lista
        self.Alumnoslist.addItem("Alumno 1")
        self.Alumnoslist.addItem("Alumno 2")
        self.Alumnoslist.addItem("Alumno 3")

        # Agregar asignaturas a la lista
        self.Asignaturaslist.addItem("Matemáticas")
        self.Asignaturaslist.addItem("Física")
        self.Asignaturaslist.addItem("Química")

    def modificar_notas(self):
        # Aquí puedes agregar la funcionalidad de modificar notas
        selected_item = self.Alumnoslist.currentItem()
        if selected_item:
            QMessageBox.information(None, "Modificar Notas", f"Modificar notas para {selected_item.text()}")
        else:
            QMessageBox.warning(None, "Error", "Por favor, selecciona un alumno para modificar las notas")

    def ver_asignaturas(self):
        # Aquí puedes agregar la funcionalidad de ver asignaturas
        selected_item = self.Asignaturaslist.currentItem()
        if selected_item:
            QMessageBox.information(None, "Ver Asignaturas", f"Ver detalles de la asignatura: {selected_item.text()}")
        else:
            QMessageBox.warning(None, "Error", "Por favor, selecciona una asignatura para ver los detalles")
